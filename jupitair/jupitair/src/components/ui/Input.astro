---
export interface Props {
  type?: 'text' | 'email' | 'tel' | 'password' | 'number' | 'url';
  id?: string;
  name?: string;
  placeholder?: string;
  required?: boolean;
  disabled?: boolean;
  value?: string;
  size?: 'sm' | 'md' | 'lg';
  error?: boolean;
  class?: string;
  [key: string]: any;
}

const {
  type = 'text',
  id,
  name,
  placeholder,
  required = false,
  disabled = false,
  value,
  size = 'md',
  error = false,
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = 'block w-full border rounded-lg shadow-sm transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

const sizeClasses = {
  sm: 'px-4 py-2.5 text-sm min-h-[40px]',
  md: 'px-5 py-3 text-base min-h-[44px] sm:min-h-[48px]',
  lg: 'px-6 py-3.5 text-lg min-h-[48px] sm:min-h-[52px]'
};

const stateClasses = error
  ? 'border-emergency-300 text-emergency-900 placeholder-emergency-300 focus:border-emergency-500 focus:ring-emergency-500'
  : 'border-gray-300 text-gray-900 placeholder-gray-500 focus:border-primary-500 focus:ring-primary-500';

const classes = `${baseClasses} ${sizeClasses[size]} ${stateClasses} ${className}`.trim();
---

<input
  type={type}
  id={id}
  name={name}
  placeholder={placeholder}
  required={required}
  disabled={disabled}
  value={value}
  class={classes}
  {...rest}
/>