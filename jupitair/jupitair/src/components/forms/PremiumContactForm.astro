---
import PremiumButton from '../ui/PremiumButton.astro';
import PremiumCard from '../ui/PremiumCard.astro';

export interface Props {
  variant?: 'default' | 'floating' | 'modern' | 'emergency';
  showEmergencyOption?: boolean;
  formName?: string;
}

const { 
  variant = 'default',
  showEmergencyOption = true,
  formName = 'contact'
} = Astro.props;
---

<PremiumCard variant={variant === 'emergency' ? 'gradient' : 'glass'} padding="lg" class="max-w-2xl mx-auto">
  <form 
    name={formName}
    method="POST"
    action="/success"
    data-netlify="true"
    data-netlify-honeypot="bot-field"
    id="premium-contact-form" 
    class="space-y-6"
    data-variant={variant}
  >
    {/* Hidden fields for Netlify */}
    <input type="hidden" name="form-name" value={formName} />
    <div class="hidden">
      <label>
        Don't fill this out if you're human: 
        <input name="bot-field" />
      </label>
    </div>

    {/* Form Header */}
    <div class="text-center space-y-2">
      <h2 class="text-3xl font-bold bg-gradient-to-r from-blue-600 to-blue-800 bg-clip-text text-transparent">
        Get Your Free Quote
      </h2>
      <p class="text-gray-600 dark:text-gray-400">
        Professional HVAC service starts here
      </p>
    </div>

    {/* Emergency Toggle */}
    {showEmergencyOption && (
      <div class="emergency-toggle p-4 bg-red-50 dark:bg-red-950/20 rounded-xl border border-red-200 dark:border-red-800">
        <label class="flex items-center justify-between cursor-pointer">
          <div class="flex items-center gap-3">
            <svg class="w-6 h-6 text-red-600 animate-pulse" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
            </svg>
            <div>
              <p class="font-semibold text-red-900 dark:text-red-100">Emergency Service Needed?</p>
              <p class="text-sm text-red-700 dark:text-red-300">24/7 immediate response available</p>
            </div>
          </div>
          <div class="toggle-switch">
            <input type="checkbox" id="emergency" name="emergency" value="yes" class="sr-only" />
            <div class="toggle-slider"></div>
          </div>
        </label>
      </div>
    )}

    {/* Name Field */}
    <div class="form-group">
      <label for="name" class="form-label">
        Full Name
        <span class="text-red-500">*</span>
      </label>
      <div class="input-wrapper">
        <input
          type="text"
          id="name"
          name="name"
          required
          class="form-input"
          placeholder="John Smith"
          autocomplete="name"
        />
        <div class="input-icon left">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        </div>
        <div class="validation-icon right hidden">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
      <p class="error-message text-red-500 text-sm mt-1 hidden">Please enter your full name</p>
    </div>

    {/* Phone Field */}
    <div class="form-group">
      <label for="phone" class="form-label">
        Phone Number
        <span class="text-red-500">*</span>
      </label>
      <div class="input-wrapper">
        <input
          type="tel"
          id="phone"
          name="phone"
          required
          class="form-input"
          placeholder="(940) 390-5676"
          autocomplete="tel"
        />
        <div class="input-icon left">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
        </div>
        <div class="validation-icon right hidden">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
      <p class="error-message text-red-500 text-sm mt-1 hidden">Please enter a valid phone number</p>
    </div>

    {/* Email Field */}
    <div class="form-group">
      <label for="email" class="form-label">
        Email Address
        <span class="text-gray-400 text-sm">(Optional)</span>
      </label>
      <div class="input-wrapper">
        <input
          type="email"
          id="email"
          name="email"
          class="form-input"
          placeholder="john@example.com"
          autocomplete="email"
        />
        <div class="input-icon left">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
        <div class="validation-icon right hidden">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
        </div>
      </div>
      <p class="error-message text-red-500 text-sm mt-1 hidden">Please enter a valid email address</p>
    </div>

    {/* Service Selection */}
    <div class="form-group">
      <label for="service" class="form-label">
        Service Needed
        <span class="text-red-500">*</span>
      </label>
      <div class="input-wrapper">
        <select
          id="service"
          name="service"
          required
          class="form-input appearance-none"
        >
          <option value="">Select a service...</option>
          <option value="ac-repair">AC Repair</option>
          <option value="heating-repair">Heating Repair</option>
          <option value="maintenance">Maintenance/Tune-Up</option>
          <option value="installation">New Installation</option>
          <option value="emergency">Emergency Service</option>
          <option value="other">Other/Not Sure</option>
        </select>
        <div class="input-icon left">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
        </div>
        <div class="input-icon right pointer-events-none">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </div>
      <p class="error-message text-red-500 text-sm mt-1 hidden">Please select a service</p>
    </div>

    {/* Message Field */}
    <div class="form-group">
      <label for="message" class="form-label">
        How Can We Help?
        <span class="text-gray-400 text-sm">(Optional)</span>
      </label>
      <div class="input-wrapper">
        <textarea
          id="message"
          name="message"
          rows="4"
          class="form-input resize-none"
          placeholder="Please describe your HVAC issue or needs..."
        ></textarea>
        <div class="character-count text-xs text-gray-500 absolute bottom-2 right-2">
          <span id="char-count">0</span> / 500
        </div>
      </div>
    </div>

    {/* Preferred Contact Time */}
    <div class="form-group">
      <label class="form-label">Preferred Contact Time</label>
      <div class="grid grid-cols-3 gap-3">
        <label class="time-option">
          <input type="radio" name="contact-time" value="morning" class="sr-only" />
          <div class="time-option-card">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
            </svg>
            <span>Morning</span>
          </div>
        </label>
        <label class="time-option">
          <input type="radio" name="contact-time" value="afternoon" class="sr-only" />
          <div class="time-option-card">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
            </svg>
            <span>Afternoon</span>
          </div>
        </label>
        <label class="time-option">
          <input type="radio" name="contact-time" value="anytime" class="sr-only" checked />
          <div class="time-option-card">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
            </svg>
            <span>Anytime</span>
          </div>
        </label>
      </div>
    </div>

    {/* Hidden fields for tracking -->}
    <input type="hidden" name="page" value={Astro.url.pathname} />
    <input type="hidden" name="referrer" id="referrer-field" />
    <input type="hidden" name="timestamp" id="timestamp-field" />

    {/* Submit Button */}
    <div class="space-y-4">
      <button
        type="submit"
        class={`
          w-full premium-btn
          bg-gradient-to-r from-blue-600 to-blue-700
          text-white shadow-lg shadow-blue-600/25
          hover:from-blue-700 hover:to-blue-800 hover:shadow-xl hover:shadow-blue-600/30
          focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2
          border border-blue-700
          h-13 px-8 text-lg rounded-xl
          font-semibold tracking-tight transition-all duration-200
          disabled:opacity-50 disabled:cursor-not-allowed
          active:scale-[0.98]
          ${variant === 'emergency' ? 'emergency-pulse' : ''}
        `}
      >
        <span class="button-text">Get Free Quote</span>
        <span class="loading-text hidden">Submitting...</span>
      </button>

      {/* Trust Indicators */}
      <div class="flex items-center justify-center gap-6 text-sm text-gray-600 dark:text-gray-400">
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span>100% Secure</span>
        </div>
        <div class="flex items-center gap-1">
          <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
            <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
          </svg>
          <span>No Spam Calls</span>
        </div>
      </div>
    </div>
  </form>
</PremiumCard>

<style>
  /* Form Base Styles */
  .form-group {
    @apply space-y-2;
  }

  .form-label {
    @apply block text-sm font-semibold text-gray-700 dark:text-gray-300;
  }

  .input-wrapper {
    @apply relative;
  }

  .form-input {
    @apply w-full px-12 py-3 text-base
    bg-white dark:bg-gray-800
    border-2 border-gray-200 dark:border-gray-700
    rounded-xl
    transition-all duration-200
    focus:border-blue-500 dark:focus:border-blue-400
    focus:ring-4 focus:ring-blue-500/10
    hover:border-gray-300 dark:hover:border-gray-600
    placeholder-gray-400 dark:placeholder-gray-500;
  }

  .form-input:focus {
    @apply outline-none;
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
  }

  .form-input.error {
    @apply border-red-500 focus:border-red-500 focus:ring-red-500/10;
  }

  .form-input.success {
    @apply border-green-500 focus:border-green-500 focus:ring-green-500/10;
  }

  /* Input Icons */
  .input-icon {
    @apply absolute top-1/2 transform -translate-y-1/2 text-gray-400;
  }

  .input-icon.left {
    @apply left-4;
  }

  .input-icon.right {
    @apply right-4;
  }

  /* Toggle Switch */
  .toggle-switch {
    @apply relative inline-block w-14 h-7;
  }

  .toggle-slider {
    @apply absolute inset-0 bg-gray-300 dark:bg-gray-700 rounded-full cursor-pointer transition-all duration-300;
  }

  .toggle-slider::before {
    content: '';
    @apply absolute left-1 top-1 w-5 h-5 bg-white rounded-full transition-all duration-300;
  }

  input:checked + .toggle-slider {
    @apply bg-red-600;
  }

  input:checked + .toggle-slider::before {
    transform: translateX(28px);
  }

  /* Time Option Cards */
  .time-option-card {
    @apply flex flex-col items-center gap-2 p-3
    border-2 border-gray-200 dark:border-gray-700
    rounded-xl cursor-pointer
    transition-all duration-200
    hover:border-blue-300 dark:hover:border-blue-600
    hover:bg-blue-50 dark:hover:bg-blue-950/20;
  }

  .time-option input:checked + .time-option-card {
    @apply border-blue-500 bg-blue-50 dark:bg-blue-950/30 text-blue-600 dark:text-blue-400;
  }

  /* Loading State */
  .form-input:disabled {
    @apply opacity-50 cursor-not-allowed;
  }

  button[type="submit"][data-loading="true"] .button-text {
    @apply hidden;
  }

  button[type="submit"][data-loading="true"] .loading-text {
    @apply inline-flex items-center gap-2;
  }

  /* Animations */
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }
    20%, 40%, 60%, 80% { transform: translateX(2px); }
  }

  .shake {
    animation: shake 0.5s ease-in-out;
  }

  @keyframes success-pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(34, 197, 94, 0.4);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(34, 197, 94, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(34, 197, 94, 0);
    }
  }

  .success-pulse {
    animation: success-pulse 1s ease-in-out;
  }

  @keyframes emergency-pulse {
    0%, 100% {
      box-shadow: 0 0 0 0 rgba(220, 38, 38, 0.4);
    }
    50% {
      box-shadow: 0 0 0 20px rgba(220, 38, 38, 0);
    }
  }

  .emergency-pulse {
    animation: emergency-pulse 2s infinite;
  }

  /* Dark Mode Specific */
  @media (prefers-color-scheme: dark) {
    .form-input {
      background-color: rgba(31, 41, 55, 0.5);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('premium-contact-form') as HTMLFormElement;
    const inputs = form?.querySelectorAll('input, select, textarea');
    const messageField = document.getElementById('message') as HTMLTextAreaElement;
    const charCount = document.getElementById('char-count');
    const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;

    // Set hidden fields
    const referrerField = document.getElementById('referrer-field') as HTMLInputElement;
    const timestampField = document.getElementById('timestamp-field') as HTMLInputElement;
    
    if (referrerField) referrerField.value = document.referrer;
    if (timestampField) timestampField.value = new Date().toISOString();

    // Character counter
    messageField?.addEventListener('input', (e) => {
      const target = e.target as HTMLTextAreaElement;
      const length = target.value.length;
      if (charCount) charCount.textContent = String(length);
      if (length > 500) {
        target.value = target.value.substring(0, 500);
        if (charCount) charCount.textContent = '500';
      }
    });

    // Real-time validation
    inputs?.forEach((input) => {
      input.addEventListener('blur', () => validateField(input as HTMLInputElement));
      input.addEventListener('input', () => {
        const field = input as HTMLInputElement;
        if (field.classList.contains('error')) {
          validateField(field);
        }
      });
    });

    function validateField(field: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement): boolean {
      const wrapper = field.closest('.form-group');
      const errorMessage = wrapper?.querySelector('.error-message');
      const validationIcon = wrapper?.querySelector('.validation-icon');
      
      let isValid = true;
      
      // Validation rules
      if (field.hasAttribute('required') && !field.value.trim()) {
        isValid = false;
      }
      
      if (field.type === 'email' && field.value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        isValid = emailRegex.test(field.value);
      }
      
      if (field.type === 'tel' && field.value) {
        const phoneRegex = /^[\d\s\-\(\)]+$/;
        isValid = phoneRegex.test(field.value) && field.value.replace(/\D/g, '').length >= 10;
      }
      
      // Update UI
      if (isValid && field.value) {
        field.classList.remove('error');
        field.classList.add('success');
        errorMessage?.classList.add('hidden');
        validationIcon?.classList.remove('hidden');
      } else if (!isValid) {
        field.classList.add('error');
        field.classList.remove('success');
        errorMessage?.classList.remove('hidden');
        validationIcon?.classList.add('hidden');
        field.classList.add('shake');
        setTimeout(() => field.classList.remove('shake'), 500);
      }
      
      return isValid;
    }

    // Form submission with client-side validation
    form?.addEventListener('submit', (e) => {
      // Validate all fields
      let isValid = true;
      inputs?.forEach((input) => {
        if (!validateField(input as HTMLInputElement)) {
          isValid = false;
        }
      });
      
      if (!isValid) {
        e.preventDefault();
        return;
      }
      
      // Show loading state
      submitButton?.setAttribute('data-loading', 'true');
      submitButton.disabled = true;
      
      // Track submission in analytics
      if (typeof gtag !== 'undefined') {
        gtag('event', 'form_submit', {
          event_category: 'engagement',
          event_label: 'contact_form',
          value: 1
        });
      }
    });

    // Phone number formatting
    const phoneInput = document.getElementById('phone') as HTMLInputElement;
    phoneInput?.addEventListener('input', (e) => {
      const target = e.target as HTMLInputElement;
      let value = target.value.replace(/\D/g, '');
      if (value.length > 0) {
        if (value.length <= 3) {
          value = `(${value}`;
        } else if (value.length <= 6) {
          value = `(${value.slice(0, 3)}) ${value.slice(3)}`;
        } else {
          value = `(${value.slice(0, 3)}) ${value.slice(3, 6)}-${value.slice(6, 10)}`;
        }
      }
      target.value = value;
    });
  });
</script>