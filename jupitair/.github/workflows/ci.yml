name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true
        
      - name: Check TypeScript
        run: npm run type-check
        continue-on-error: true
        
      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  seo-audit:
    name: SEO Audit
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Start preview server
        run: npm run preview &
        
      - name: Wait for server
        run: sleep 10
        
      - name: Check sitemap
        run: |
          curl -f http://localhost:4321/sitemap.xml || exit 1
          echo "‚úÖ Sitemap accessible"
          
      - name: Check robots.txt
        run: |
          curl -f http://localhost:4321/robots.txt || exit 1
          echo "‚úÖ Robots.txt accessible"
          
      - name: Validate HTML
        run: |
          curl -s http://localhost:4321/ | head -50
          echo "‚úÖ Homepage loads"
          
      - name: Check key pages
        run: |
          curl -f http://localhost:4321/services/ac-repair/ || exit 1
          curl -f http://localhost:4321/frisco/ || exit 1
          curl -f http://localhost:4321/frisco/ac-repair/ || exit 1
          echo "‚úÖ Key pages accessible"

  accessibility-test:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Install axe-core
        run: npm install -g @axe-core/cli
        
      - name: Start preview server
        run: npm run preview &
        
      - name: Wait for server
        run: sleep 10
        
      - name: Run accessibility tests
        run: |
          axe http://localhost:4321/ --exit
          axe http://localhost:4321/services/ac-repair/ --exit
          axe http://localhost:4321/frisco/ --exit
          echo "‚úÖ Accessibility tests passed"

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-test, seo-audit]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prebuilt'
          working-directory: ./

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: [lint-and-test, seo-audit, accessibility-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prebuilt --prod'
          working-directory: ./
          
      - name: Post-deployment health check
        run: |
          sleep 30
          curl -f https://jupitairhvac.com/ || exit 1
          curl -f https://jupitairhvac.com/sitemap.xml || exit 1
          echo "‚úÖ Production deployment successful"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: success() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Notify deployment success
        run: |
          echo "üöÄ Production deployment successful!"
          echo "üåê Site: https://jupitairhvac.com"
          echo "üìä Performance monitoring: Lighthouse CI"
          echo "üîç SEO monitoring: Active"