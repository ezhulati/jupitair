---
import BaseLayout from '../layouts/BaseLayout.astro';
import PremiumButton from '../components/ui/PremiumButton.astro';
import PremiumCard from '../components/ui/PremiumCard.astro';
import Badge from '../components/ui/Badge.astro';

const colorPalette = {
  primary: [
    { name: 'Blue 50', value: '#eff6ff', css: 'bg-blue-50' },
    { name: 'Blue 100', value: '#dbeafe', css: 'bg-blue-100' },
    { name: 'Blue 200', value: '#bfdbfe', css: 'bg-blue-200' },
    { name: 'Blue 300', value: '#93c5fd', css: 'bg-blue-300' },
    { name: 'Blue 400', value: '#60a5fa', css: 'bg-blue-400' },
    { name: 'Blue 500', value: '#3b82f6', css: 'bg-blue-500' },
    { name: 'Blue 600', value: '#2563eb', css: 'bg-blue-600' },
    { name: 'Blue 700', value: '#1d4ed8', css: 'bg-blue-700' },
    { name: 'Blue 800', value: '#1e40af', css: 'bg-blue-800' },
    { name: 'Blue 900', value: '#1e3a8a', css: 'bg-blue-900' },
  ],
  semantic: [
    { name: 'Success', value: '#10b981', css: 'bg-green-500' },
    { name: 'Warning', value: '#f59e0b', css: 'bg-amber-500' },
    { name: 'Error', value: '#ef4444', css: 'bg-red-500' },
    { name: 'Info', value: '#3b82f6', css: 'bg-blue-500' },
  ],
  neutral: [
    { name: 'Gray 50', value: '#f9fafb', css: 'bg-gray-50' },
    { name: 'Gray 100', value: '#f3f4f6', css: 'bg-gray-100' },
    { name: 'Gray 200', value: '#e5e7eb', css: 'bg-gray-200' },
    { name: 'Gray 300', value: '#d1d5db', css: 'bg-gray-300' },
    { name: 'Gray 400', value: '#9ca3af', css: 'bg-gray-400' },
    { name: 'Gray 500', value: '#6b7280', css: 'bg-gray-500' },
    { name: 'Gray 600', value: '#4b5563', css: 'bg-gray-600' },
    { name: 'Gray 700', value: '#374151', css: 'bg-gray-700' },
    { name: 'Gray 800', value: '#1f2937', css: 'bg-gray-800' },
    { name: 'Gray 900', value: '#111827', css: 'bg-gray-900' },
  ],
};

const typography = [
  { name: 'Display XL', class: 'text-6xl font-bold', sample: 'Enterprise Excellence' },
  { name: 'Display', class: 'text-5xl font-bold', sample: 'Professional HVAC Services' },
  { name: 'Heading 1', class: 'text-4xl font-bold', sample: 'Trusted by North Texas' },
  { name: 'Heading 2', class: 'text-3xl font-semibold', sample: 'Industry Leading Quality' },
  { name: 'Heading 3', class: 'text-2xl font-semibold', sample: 'Expert Technicians' },
  { name: 'Heading 4', class: 'text-xl font-semibold', sample: 'Service Excellence' },
  { name: 'Body Large', class: 'text-lg', sample: 'We provide comprehensive HVAC solutions' },
  { name: 'Body', class: 'text-base', sample: 'Professional service you can trust' },
  { name: 'Body Small', class: 'text-sm', sample: 'Licensed and insured technicians' },
  { name: 'Caption', class: 'text-xs', sample: 'Available 24/7 for emergencies' },
];

const spacing = [
  { name: 'xs', value: '0.25rem', class: 'p-1' },
  { name: 'sm', value: '0.5rem', class: 'p-2' },
  { name: 'md', value: '1rem', class: 'p-4' },
  { name: 'lg', value: '1.5rem', class: 'p-6' },
  { name: 'xl', value: '2rem', class: 'p-8' },
  { name: '2xl', value: '3rem', class: 'p-12' },
  { name: '3xl', value: '4rem', class: 'p-16' },
];

const shadows = [
  { name: 'sm', class: 'shadow-sm' },
  { name: 'default', class: 'shadow' },
  { name: 'md', class: 'shadow-md' },
  { name: 'lg', class: 'shadow-lg' },
  { name: 'xl', class: 'shadow-xl' },
  { name: '2xl', class: 'shadow-2xl' },
  { name: 'inner', class: 'shadow-inner' },
];

const animations = [
  { name: 'Fade In', class: 'animate-fade-in' },
  { name: 'Slide Up', class: 'animate-slide-up' },
  { name: 'Scale In', class: 'animate-scale-in' },
  { name: 'Float', class: 'animate-float' },
  { name: 'Pulse', class: 'animate-pulse' },
  { name: 'Spin', class: 'animate-spin' },
];

const formElements = [
  { type: 'text', label: 'Text Input', placeholder: 'Enter your name' },
  { type: 'email', label: 'Email Input', placeholder: 'john@example.com' },
  { type: 'tel', label: 'Phone Input', placeholder: '(940) 390-5676' },
  { type: 'textarea', label: 'Text Area', placeholder: 'Describe your HVAC needs...' },
  { type: 'select', label: 'Select Dropdown', options: ['AC Repair', 'Heating', 'Maintenance'] },
];
---

<BaseLayout 
  title="Style Guide | Enterprise Design System | Jupitair HVAC" 
  description="Comprehensive style guide and design system documentation for Jupitair HVAC's enterprise-grade website."
  noindex={true}
>
  <div class="min-h-screen bg-gradient-to-br from-gray-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
    <!-- Header -->
    <div class="bg-gradient-to-r from-blue-600 to-blue-800 text-white">
      <div class="max-w-7xl overflow-x-hidden container mx-auto px-4 py-16">
        <div class="max-w-4xl">
          <h1 class="break-words text-5xl font-bold mb-4 animate-fade-in">
            Enterprise Design System
          </h1>
          <p class="break-words text-xl text-blue-100 animate-fade-in-delayed">
            Comprehensive style guide showcasing our $100K+ quality standards, pixel-perfect components, and enterprise-grade attention to detail.
          </p>
        </div>
      </div>
    </div>

    <div class="max-w-7xl overflow-x-hidden container mx-auto px-4 py-12">
      <div class="max-w-7xl mx-auto space-y-16">
        
        <!-- Design Principles -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Design Principles</h2>
          <div class="min-w-0 grid md:grid-cols-4 gap-6">
            <PremiumCard variant="elevated" padding="md">
              <div class="text-center">
                <div class="min-w-0 w-16 h-16 bg-blue-100 dark:bg-blue-900/20 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                  </svg>
                </div>
                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Trust & Reliability</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Every element builds confidence through professional design and clear communication.</p>
              </div>
            </PremiumCard>
            
            <PremiumCard variant="elevated" padding="md">
              <div class="text-center">
                <div class="min-w-0 w-16 h-16 bg-green-100 dark:bg-green-900/20 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                </div>
                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Performance First</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Optimized for instant loading with sub-second interactions and smooth animations.</p>
              </div>
            </PremiumCard>
            
            <PremiumCard variant="elevated" padding="md">
              <div class="text-center">
                <div class="min-w-0 w-16 h-16 bg-purple-100 dark:bg-purple-900/20 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01" />
                  </svg>
                </div>
                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Pixel Perfect</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Meticulous attention to spacing, alignment, and visual hierarchy in every component.</p>
              </div>
            </PremiumCard>
            
            <PremiumCard variant="elevated" padding="md">
              <div class="text-center">
                <div class="min-w-0 w-16 h-16 bg-orange-100 dark:bg-orange-900/20 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-orange-600 dark:text-orange-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <h3 class="font-semibold text-gray-900 dark:text-white mb-2">Always Available</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">24/7 emergency service reflected in accessible, responsive design patterns.</p>
              </div>
            </PremiumCard>
          </div>
        </section>

        <!-- Color Palette -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Color Palette</h2>
          
          <div class="space-y-8">
            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">Primary Colors</h3>
              <div class="min-w-0 grid grid-cols-2 sm:grid-cols-5 lg:grid-cols-10 gap-4">
                {colorPalette.primary.map((color) => (
                  <div class="text-center">
                    <div class={`h-20 rounded-lg ${color.css} border border-gray-200 dark:border-gray-700`}></div>
                    <p class="text-xs font-medium mt-2 text-gray-700 dark:text-gray-300">{color.name}</p>
                    <p class="text-xs text-gray-500 dark:text-gray-400">{color.value}</p>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">Semantic Colors</h3>
              <div class="min-w-0 grid grid-cols-2 sm:grid-cols-4 gap-4">
                {colorPalette.semantic.map((color) => (
                  <div class="text-center">
                    <div class={`h-20 rounded-lg ${color.css} border border-gray-200 dark:border-gray-700`}></div>
                    <p class="text-xs font-medium mt-2 text-gray-700 dark:text-gray-300">{color.name}</p>
                    <p class="text-xs text-gray-500 dark:text-gray-400">{color.value}</p>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">Neutral Colors</h3>
              <div class="min-w-0 grid grid-cols-2 sm:grid-cols-5 lg:grid-cols-10 gap-4">
                {colorPalette.neutral.map((color) => (
                  <div class="text-center">
                    <div class={`h-20 rounded-lg ${color.css} border border-gray-200 dark:border-gray-700`}></div>
                    <p class="text-xs font-medium mt-2 text-gray-700 dark:text-gray-300">{color.name}</p>
                    <p class="text-xs text-gray-500 dark:text-gray-400">{color.value}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </section>

        <!-- Typography -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Typography</h2>
          <PremiumCard variant="elevated" padding="lg">
            <div class="space-y-6">
              {typography.map((type) => (
                <div class="min-w-0 flex items-baseline justify-between border-b border-gray-200 dark:border-gray-700 pb-4">
                  <div class="min-w-0 flex-1">
                    <p class={`${type.class} text-gray-900 dark:text-white`}>{type.sample}</p>
                  </div>
                  <div class="ml-8 text-right">
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">{type.name}</p>
                    <p class="text-xs text-gray-500 dark:text-gray-500 font-mono">{type.class}</p>
                  </div>
                </div>
              ))}
            </div>
          </PremiumCard>
        </section>

        <!-- Spacing System -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Spacing System</h2>
          <div class="min-w-0 grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-7 gap-4">
            {spacing.map((space) => (
              <PremiumCard variant="elevated" padding="sm">
                <div class="text-center">
                  <div class={`bg-blue-500 ${space.class} mb-2`}></div>
                  <p class="text-sm font-medium text-gray-900 dark:text-white">{space.name}</p>
                  <p class="text-xs text-gray-500 dark:text-gray-400">{space.value}</p>
                </div>
              </PremiumCard>
            ))}
          </div>
        </section>

        <!-- Buttons -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Buttons</h2>
          <div class="space-y-8">
            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">Variants</h3>
              <div class="min-w-0 flex flex-wrap gap-4">
                <PremiumButton variant="primary" size="lg">Primary Button</PremiumButton>
                <PremiumButton variant="secondary" size="lg">Secondary Button</PremiumButton>
                <PremiumButton variant="emergency" size="lg">Emergency Button</PremiumButton>
                <PremiumButton variant="ghost" size="lg">Ghost Button</PremiumButton>
                <PremiumButton variant="outline" size="lg">Outline Button</PremiumButton>
              </div>
            </div>
            
            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">Sizes</h3>
              <div class="min-w-0 flex flex-wrap items-center gap-4">
                <PremiumButton variant="primary" size="sm">Small</PremiumButton>
                <PremiumButton variant="primary" size="md">Medium</PremiumButton>
                <PremiumButton variant="primary" size="lg">Large</PremiumButton>
                <PremiumButton variant="primary" size="xl">Extra Large</PremiumButton>
              </div>
            </div>

            <div>
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-4">States</h3>
              <div class="min-w-0 flex flex-wrap gap-4">
                <PremiumButton variant="primary" size="lg">Normal</PremiumButton>
                <PremiumButton variant="primary" size="lg" class="opacity-50 cursor-not-allowed">Disabled</PremiumButton>
                <button class="premium-btn bg-gradient-to-r from-blue-600 to-blue-700 text-white h-12 px-8 rounded-xl font-semibold">
                  <span class="min-w-0 flex items-center gap-2">
                    <svg class="animate-spin h-5 w-5" viewBox="0 0 24 24">
                      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle>
                      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Loading...
                  </span>
                </button>
              </div>
            </div>
          </div>
        </section>

        <!-- Cards -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Cards</h2>
          <div class="min-w-0 grid md:grid-cols-3 gap-6">
            <PremiumCard variant="default" padding="lg">
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-2">Default Card</h3>
              <p class="text-gray-600 dark:text-gray-400">Standard card with subtle shadow and border. Perfect for content sections.</p>
            </PremiumCard>
            
            <PremiumCard variant="elevated" padding="lg">
              <h3 class="break-words text-xl font-semibold text-gray-900 dark:text-white mb-2">Glass Card</h3>
              <p class="text-gray-600 dark:text-gray-400">Glassmorphism effect with backdrop blur for modern, premium feel.</p>
            </PremiumCard>
            
            <PremiumCard variant="gradient" padding="lg">
              <h3 class="break-words text-xl font-semibold text-white mb-2">Gradient Card</h3>
              <p class="text-gray-100">Eye-catching gradient background for important CTAs and features.</p>
            </PremiumCard>
          </div>
        </section>

        <!-- Badges -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Badges</h2>
          <div class="min-w-0 flex flex-wrap gap-3">
            <Badge variant="default">Default</Badge>
            <Badge variant="primary">Primary</Badge>
            <Badge variant="success">Success</Badge>
            <Badge variant="warning">Warning</Badge>
            <Badge variant="error">Error</Badge>
            <Badge variant="info">Information</Badge>
          </div>
        </section>

        <!-- Forms -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Form Elements</h2>
          <PremiumCard variant="elevated" padding="lg">
            <form class="overflow-x-hidden space-y-6 max-w-xl">
              {formElements.map((element) => (
                <div>
                  <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    {element.label}
                  </label>
                  {element.type === 'textarea' ? (
                    <textarea
                      placeholder={element.placeholder}
                      rows="4"
                      class="w-full px-4 py-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl focus:border-blue-500 focus:ring-4 focus:ring-blue-500/10 transition-all"
                    ></textarea>
                  ) : element.type === 'select' ? (
                    <select class="w-full px-4 py-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl focus:border-blue-500 focus:ring-4 focus:ring-blue-500/10 transition-all">
                      <option>Select an option...</option>
                      {element.options?.map(option => (
                        <option>{option}</option>
                      ))}
                    </select>
                  ) : (
                    <input
                      type={element.type}
                      placeholder={element.placeholder}
                      class="w-full px-4 py-3 bg-white dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl focus:border-blue-500 focus:ring-4 focus:ring-blue-500/10 transition-all"
                    />
                  )}
                </div>
              ))}
            </form>
          </PremiumCard>
        </section>

        <!-- Shadows -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Shadow System</h2>
          <div class="min-w-0 grid grid-cols-2 sm:grid-cols-4 lg:grid-cols-7 gap-6">
            {shadows.map((shadow) => (
              <div class="text-center">
                <div class={`bg-white dark:bg-gray-800 rounded-xl p-6 ${shadow.class}`}>
                  <div class="w-12 h-12 bg-blue-500 rounded-lg mx-auto"></div>
                </div>
                <p class="text-sm font-medium mt-3 text-gray-700 dark:text-gray-300">{shadow.name}</p>
              </div>
            ))}
          </div>
        </section>

        <!-- Animations -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Animations</h2>
          <div class="min-w-0 grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-6">
            {animations.map((animation) => (
              <PremiumCard variant="elevated" padding="md">
                <div class="text-center">
                  <div class={`w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg mx-auto mb-3 ${animation.class}`}></div>
                  <p class="text-sm font-medium text-gray-900 dark:text-white">{animation.name}</p>
                </div>
              </PremiumCard>
            ))}
          </div>
        </section>

        <!-- Icons -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Icon System</h2>
          <PremiumCard variant="elevated" padding="lg">
            <div class="min-w-0 grid grid-cols-4 sm:grid-cols-6 lg:grid-cols-12 gap-4">
              {['phone', 'email', 'location', 'clock', 'shield', 'star', 'tool', 'thermometer', 'snowflake', 'fire', 'warning', 'check'].map((icon) => (
                <div class="text-center p-4 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors">
                  <svg class="w-8 h-8 mx-auto text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    {icon === 'phone' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />}
                    {icon === 'email' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />}
                    {icon === 'location' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />}
                    {icon === 'clock' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />}
                    {icon === 'shield' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />}
                    {icon === 'star' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />}
                    {icon === 'tool' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />}
                    {icon === 'thermometer' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2 2 2 0 00-2 2v6a2 2 0 002 2 2 2 0 002-2zm0 0V9a2 2 0 012-2 2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />}
                    {icon === 'snowflake' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />}
                    {icon === 'fire' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z" />}
                    {icon === 'warning' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />}
                    {icon === 'check' && <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />}
                  </svg>
                  <p class="text-xs mt-2 text-gray-600 dark:text-gray-400">{icon}</p>
                </div>
              ))}
            </div>
          </PremiumCard>
        </section>

        <!-- Responsive Grid -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Responsive Grid System</h2>
          <PremiumCard variant="elevated" padding="lg">
            <div class="space-y-4">
              <div class="min-w-0 grid grid-cols-12 gap-2">
                {[...Array(12)].map((_, i) => (
                  <div class="bg-blue-500 text-white text-xs p-2 rounded text-center">1</div>
                ))}
              </div>
              <div class="min-w-0 grid grid-cols-12 gap-2">
                <div class="col-span-6 bg-purple-500 text-white p-2 rounded text-center">6</div>
                <div class="col-span-6 bg-purple-500 text-white p-2 rounded text-center">6</div>
              </div>
              <div class="min-w-0 grid grid-cols-12 gap-2">
                <div class="col-span-4 bg-green-500 text-white p-2 rounded text-center">4</div>
                <div class="col-span-4 bg-green-500 text-white p-2 rounded text-center">4</div>
                <div class="col-span-4 bg-green-500 text-white p-2 rounded text-center">4</div>
              </div>
              <div class="min-w-0 grid grid-cols-12 gap-2">
                <div class="col-span-3 bg-orange-500 text-white p-2 rounded text-center">3</div>
                <div class="col-span-6 bg-orange-500 text-white p-2 rounded text-center">6</div>
                <div class="col-span-3 bg-orange-500 text-white p-2 rounded text-center">3</div>
              </div>
            </div>
          </PremiumCard>
        </section>

        <!-- Code Standards -->
        <section>
          <h2 class="break-words text-3xl font-bold text-gray-900 dark:text-white mb-8">Code Standards</h2>
          <PremiumCard variant="elevated" padding="lg">
            <div class="overflow-x-hidden prose prose-lg dark:prose-invert max-w-none">
              <h3>Component Structure</h3>
              <pre class="bg-gray-900 text-gray-100 p-4 rounded-xl overflow-x-auto"><code>{`---
// Astro Component Template
import BaseLayout from '../layouts/BaseLayout.astro';
import PremiumButton from '../components/ui/PremiumButton.astro';

export interface Props {
  variant?: 'default' | 'premium';
  title: string;
}

const { variant = 'default', title } = Astro.props;
---

<section class="enterprise-section">
  <h2>{title}</h2>
  <slot />
</section>

<style>
  .enterprise-section {
    @apply px-4 py-16 bg-gradient-to-br from-gray-50 to-white;
  }
</style>`}</code></pre>

              <h3 class="mt-8">CSS Architecture</h3>
              <ul>
                <li>Use Tailwind utilities first</li>
                <li>Component-specific styles in style tags</li>
                <li>CSS custom properties for dynamic values</li>
                <li>BEM naming for custom classes</li>
              </ul>

              <h3 class="mt-8">Performance Guidelines</h3>
              <ul>
                <li>Lazy load images below the fold</li>
                <li>Use responsive images with srcset</li>
                <li>Implement critical CSS inlining</li>
                <li>Minimize JavaScript bundle size</li>
                <li>Use Astro's static site generation</li>
              </ul>

              <h3 class="mt-8">Accessibility Checklist</h3>
              <ul>
                <li>WCAG 2.1 AA compliance minimum</li>
                <li>Semantic HTML structure</li>
                <li>Proper ARIA labels and roles</li>
                <li>Keyboard navigation support</li>
                <li>Focus indicators visible</li>
                <li>Color contrast ratios met</li>
              </ul>
            </div>
          </PremiumCard>
        </section>

        <!-- Footer -->
        <section class="border-t border-gray-200 dark:border-gray-700 pt-12">
          <div class="text-center">
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              This style guide represents our commitment to enterprise-grade quality and attention to detail.
            </p>
            <p class="text-sm text-gray-500 dark:text-gray-500">
              Version 1.0.0 | Last Updated: {new Date().toLocaleDateString()}
            </p>
          </div>
        </section>

      </div>
    </div>
  </div>
</BaseLayout>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-in-delayed {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    50% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }

  .animate-fade-in-delayed {
    animation: fade-in-delayed 1s ease-out forwards;
  }

  .animate-slide-up {
    animation: slide-up 0.8s ease-out forwards;
  }

  .animate-scale-in {
    animation: scale-in 0.5s ease-out forwards;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .prose pre {
    background-color: #1f2937;
    color: #f3f4f6;
  }

  .prose code {
    color: #60a5fa;
  }
</style>