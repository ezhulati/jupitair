---
import Button from '../ui/Button.astro';

export interface Props {
  formId?: string;
  variant?: 'default' | 'compact' | 'emergency';
  hideNonEssential?: boolean;
}

const { 
  formId = 'contact-form', 
  variant = 'default',
  hideNonEssential = false 
} = Astro.props;

const isCompact = variant === 'compact' || hideNonEssential;
const isEmergency = variant === 'emergency';
---

<div class="bg-white rounded-xl shadow-lg p-4 sm:p-6 lg:p-8 w-full max-w-4xl mx-auto border border-gray-100">
  <form 
    class="space-y-4 sm:space-y-6" 
    name="contact" 
    method="POST" 
    data-netlify="true"
    netlify-honeypot="bot-field"
    data-form-type={isEmergency ? 'emergency' : 'contact'}
    id={formId}
    aria-label="Contact Form"
    novalidate
  >
    <!-- Honeypot field for spam protection -->
    <input type="hidden" name="form-name" value="contact" />
    <input type="hidden" name="emergency" value={isEmergency ? 'true' : 'false'} />
    <div class="sr-only" aria-hidden="true">
      <label>
        Don't fill this out if you're human: 
        <input name="bot-field" tabindex="-1" autocomplete="off" />
      </label>
    </div>

    <!-- Emergency banner -->
    {isEmergency && (
      <div 
        class="p-4 bg-red-50 border-2 border-red-200 rounded-xl"
        role="alert"
        aria-live="polite"
      >
        <div class="flex items-center gap-3">
          <svg 
            class="w-6 h-6 text-red-600" 
            fill="currentColor" 
            viewBox="0 0 20 20"
            aria-hidden="true"
          >
            <path 
              fill-rule="evenodd" 
              d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" 
              clip-rule="evenodd" 
            />
          </svg>
          <div>
            <p class="font-semibold text-red-900">Emergency Service Request</p>
            <p class="text-sm text-red-700">We'll respond within 30 minutes</p>
          </div>
        </div>
      </div>
    )}

    <!-- Core contact information -->
    <fieldset class="space-y-4">
      <legend class="sr-only">Contact Information</legend>
      
      <!-- Name fields -->
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div class="form-group">
          <label for={`${formId}-firstName`} class="form-label">
            First Name
            <span class="text-red-600 ml-1" aria-label="required">*</span>
          </label>
          <input
            type="text"
            id={`${formId}-firstName`}
            name="firstName"
            required
            autocomplete="given-name"
            placeholder="John"
            class="form-input"
            aria-describedby={`${formId}-firstName-error`}
          />
          <div id={`${formId}-firstName-error`} class="error-message" role="alert" aria-live="polite"></div>
        </div>
        
        <div class="form-group">
          <label for={`${formId}-lastName`} class="form-label">
            Last Name
            <span class="text-red-600 ml-1" aria-label="required">*</span>
          </label>
          <input
            type="text"
            id={`${formId}-lastName`}
            name="lastName"
            required
            autocomplete="family-name"
            placeholder="Smith"
            class="form-input"
            aria-describedby={`${formId}-lastName-error`}
          />
          <div id={`${formId}-lastName-error`} class="error-message" role="alert" aria-live="polite"></div>
        </div>
      </div>

      <!-- Contact fields -->
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div class="form-group">
          <label for={`${formId}-phone`} class="form-label">
            Phone Number
            <span class="text-red-600 ml-1" aria-label="required">*</span>
          </label>
          <input
            type="tel"
            id={`${formId}-phone`}
            name="phone"
            required
            autocomplete="tel"
            placeholder="(214) 555-0123"
            class="form-input"
            aria-describedby={`${formId}-phone-error ${formId}-phone-help`}
          />
          <div id={`${formId}-phone-help`} class="input-help">
            We'll text you updates about your service
          </div>
          <div id={`${formId}-phone-error`} class="error-message" role="alert" aria-live="polite"></div>
        </div>
        
        <div class="form-group">
          <label for={`${formId}-email`} class="form-label">
            Email Address
            <span class="text-red-600 ml-1" aria-label="required">*</span>
          </label>
          <input
            type="email"
            id={`${formId}-email`}
            name="email"
            required
            autocomplete="email"
            placeholder="john@example.com"
            class="form-input"
            aria-describedby={`${formId}-email-error`}
          />
          <div id={`${formId}-email-error`} class="error-message" role="alert" aria-live="polite"></div>
        </div>
      </div>
    </fieldset>

    <!-- Service details -->
    <fieldset class="space-y-4">
      <legend class="sr-only">Service Details</legend>
      
      <!-- Service type -->
      <div class="form-group">
        <label for={`${formId}-service`} class="form-label">
          Service Needed
          <span class="text-red-600 ml-1" aria-label="required">*</span>
        </label>
        <select 
          id={`${formId}-service`}
          name="service"
          required
          class="form-select"
          aria-describedby={`${formId}-service-error`}
        >
          <option value="">What do you need help with?</option>
          <option value="emergency">ðŸš¨ Emergency Service</option>
          <option value="ac-repair">AC Repair</option>
          <option value="heating-repair">Heating Repair</option>
          <option value="hvac-installation">HVAC Installation</option>
          <option value="maintenance">Maintenance Service</option>
          <option value="duct-cleaning">Duct Cleaning</option>
          <option value="thermostat">Thermostat Installation</option>
          <option value="air-quality">Indoor Air Quality</option>
          <option value="estimate">Free Estimate</option>
          <option value="other">Other</option>
        </select>
        <div id={`${formId}-service-error`} class="error-message" role="alert" aria-live="polite"></div>
      </div>

      <!-- Address -->
      <div class="form-group">
        <label for={`${formId}-address`} class="form-label">
          Service Address
          <span class="text-red-600 ml-1" aria-label="required">*</span>
        </label>
        <input
          type="text"
          id={`${formId}-address`}
          name="address"
          required
          autocomplete="street-address"
          placeholder="123 Main St, Frisco, TX 75033"
          class="form-input"
          aria-describedby={`${formId}-address-error ${formId}-address-help`}
        />
        <div id={`${formId}-address-help`} class="input-help">
          Include city and ZIP code for faster service
        </div>
        <div id={`${formId}-address-error`} class="error-message" role="alert" aria-live="polite"></div>
      </div>
    </fieldset>

    <!-- Additional details (hidden in compact mode) -->
    {!isCompact && (
      <fieldset class="space-y-4">
        <legend class="sr-only">Additional Details</legend>
        
        <div class="form-group">
          <label for={`${formId}-message`} class="form-label">
            Describe Your HVAC Issue
          </label>
          <textarea
            id={`${formId}-message`}
            name="message"
            rows="3"
            placeholder="Tell us what's happening with your heating or cooling system..."
            class="form-textarea"
            aria-describedby={`${formId}-message-help`}
          ></textarea>
          <div id={`${formId}-message-help`} class="input-help">
            The more details you provide, the better we can help
          </div>
        </div>
      </fieldset>
    )}

    <!-- Submit section -->
    <div class="space-y-3 pt-4 border-t border-gray-200">
      <Button 
        type="submit" 
        variant={isEmergency ? 'emergency' : 'primary'}
        size="lg" 
        fullWidth={true}
        class="text-lg font-bold shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all"
        ariaDescribedBy={`${formId}-submit-help`}
      >
        {isEmergency ? 'ðŸš¨ Request Emergency Service' : 'ðŸ’¬ Get My Free Estimate'}
      </Button>
      
      <div id={`${formId}-submit-help`} class="text-center text-sm text-gray-600">
        {isEmergency 
          ? 'Emergency response typically within 30 minutes'
          : 'No obligation â€¢ Free consultation â€¢ Licensed & insured'
        }
      </div>
      
      <div class="text-center">
        <span class="text-gray-500 text-sm">Or call us directly:</span>
        <Button 
          href="tel:(940) 390-5676" 
          variant="outline" 
          size="lg" 
          class="ml-2 font-bold"
          ariaLabel="Call Jupitair HVAC at (940) 390-5676"
        >
          ðŸ“ž (940) 390-5676
        </Button>
      </div>
    </div>
  </form>
</div>

<style>
  /* Form styling with accessibility focus */
  .form-group {
    @apply space-y-2;
  }

  .form-label {
    @apply block text-sm font-semibold text-gray-900 leading-tight;
  }

  .form-input, .form-textarea, .form-select {
    @apply w-full px-4 py-3 text-base bg-white border-2 border-gray-200 rounded-xl;
    @apply text-gray-900 placeholder-gray-500;
    @apply transition-all duration-200 ease-in-out;
    @apply focus:outline-none focus:border-primary-500 focus:ring-2 focus:ring-primary-100;
    @apply hover:border-gray-300;
    /* Prevent zoom on iOS */
    font-size: 16px;
  }

  .form-select {
    @apply appearance-none bg-white;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.75rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 3rem;
  }

  .form-textarea {
    @apply resize-none;
    min-height: 80px;
  }

  .input-help {
    @apply text-xs text-gray-600 mt-1;
  }

  .error-message {
    @apply text-sm text-red-600 font-medium mt-1;
    min-height: 1.25rem;
  }

  .error-message:empty {
    display: none;
  }

  /* Invalid state styling */
  .form-input:invalid:not(:focus):not(:placeholder-shown),
  .form-textarea:invalid:not(:focus):not(:placeholder-shown),
  .form-select:invalid:not(:focus) {
    @apply border-red-300 bg-red-50;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .form-input, .form-textarea, .form-select {
      border-width: 3px !important;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .form-input, .form-textarea, .form-select {
      transition: none !important;
    }
  }

  /* Mobile optimizations */
  @media (max-width: 640px) {
    .form-input, .form-textarea, .form-select {
      font-size: 16px !important; /* Prevent zoom on iOS */
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('form[name="contact"]');
    
    forms.forEach(form => {
      // Real-time validation
      const inputs = form.querySelectorAll('input[required], textarea[required], select[required]');
      
      inputs.forEach(input => {
        input.addEventListener('blur', validateField);
        input.addEventListener('input', clearError);
      });

      // Form submission
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validate all fields
        let isValid = true;
        inputs.forEach(input => {
          if (!validateField({ target: input })) {
            isValid = false;
          }
        });

        if (!isValid) {
          // Focus first invalid field
          const firstError = form.querySelector('.error-message:not(:empty)');
          if (firstError) {
            const field = form.querySelector(`#${firstError.id.replace('-error', '')}`);
            field?.focus();
          }
          return;
        }

        // Get form data
        const formData = new FormData(form);
        const data = Object.fromEntries(formData);
        
        // Show loading state
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.disabled = true;
        submitBtn.textContent = 'Submitting...';
        
        try {
          // Submit to Netlify Forms
          const response = await fetch('/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams(formData).toString()
          });
          
          if (response.ok) {
            // Success redirect with service type
            const isEmergency = data.service === 'emergency';
            const successUrl = isEmergency ? '/success?emergency=true' : '/success';
            window.location.href = successUrl;
          } else {
            throw new Error('Form submission failed');
          }
        } catch (error) {
          console.error('Form submission error:', error);
          showError(submitBtn, 'Unable to submit form. Please call us directly at (940) 390-5676');
        } finally {
          // Reset button state
          submitBtn.disabled = false;
          submitBtn.textContent = originalText;
        }
      });

      function validateField(e) {
        const field = e.target;
        const errorElement = document.getElementById(`${field.id}-error`);
        
        if (!errorElement) return true;

        let errorMessage = '';
        
        if (field.required && !field.value.trim()) {
          errorMessage = `${field.labels[0]?.textContent.replace('*', '').trim()} is required`;
        } else if (field.type === 'email' && field.value && !isValidEmail(field.value)) {
          errorMessage = 'Please enter a valid email address';
        } else if (field.type === 'tel' && field.value && !isValidPhone(field.value)) {
          errorMessage = 'Please enter a valid phone number';
        }
        
        errorElement.textContent = errorMessage;
        
        if (errorMessage) {
          field.setAttribute('aria-invalid', 'true');
          return false;
        } else {
          field.setAttribute('aria-invalid', 'false');
          return true;
        }
      }

      function clearError(e) {
        const field = e.target;
        const errorElement = document.getElementById(`${field.id}-error`);
        if (errorElement && field.value) {
          errorElement.textContent = '';
          field.setAttribute('aria-invalid', 'false');
        }
      }

      function showError(element, message) {
        // Create temporary error display
        const errorDiv = document.createElement('div');
        errorDiv.className = 'mt-2 p-2 bg-red-100 border border-red-300 rounded text-red-700 text-sm';
        errorDiv.textContent = message;
        element.parentNode.appendChild(errorDiv);
        
        setTimeout(() => {
          errorDiv.remove();
        }, 5000);
      }

      function isValidEmail(email) {
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
      }

      function isValidPhone(phone) {
        const cleaned = phone.replace(/\D/g, '');
        return cleaned.length >= 10;
      }
    });
  });
</script>