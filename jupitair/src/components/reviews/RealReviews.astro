---
import Card from '../ui/Card.astro';

// Load real reviews from JSON file
import reviewData from '../../data/real-reviews.json';

// Only use verified real reviews, filter out placeholders
const realReviews = reviewData.reviews.filter(review => 
  review.verified && review.id !== 'placeholder'
);

interface Props {
  maxReviews?: number;
  serviceFilter?: string;
  title?: string;
  showPlatform?: boolean;
}

const { 
  maxReviews = 6, 
  serviceFilter, 
  title = "What Our Customers Say",
  showPlatform = true 
} = Astro.props;

// Filter reviews by service type if specified
let displayReviews = realReviews;
if (serviceFilter) {
  displayReviews = realReviews.filter(review => 
    review.serviceType === serviceFilter || 
    review.text.toLowerCase().includes(serviceFilter.toLowerCase())
  );
}

// Limit number of reviews
displayReviews = displayReviews.slice(0, maxReviews);
---

<section class="section-full bg-gray-50">
  <div class="site-container section-padding">
    <div class="text-center mb-12">
      <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-4">{title}</h2>
      <p class="text-lg sm:text-xl text-gray-700">Trusted by North Texas homeowners and businesses</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
      {displayReviews.map((review, index) => {
        const reviewText = review.text;
        const isLongText = reviewText.length > 80;
        const previewText = isLongText ? reviewText.slice(0, 80) + '...' : reviewText;
        
        return (
          <Card variant="outline" class="border-gray-200 bg-white h-full p-6">
            <div class="space-y-4 h-full flex flex-col">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-1">
                  {Array.from({ length: 5 }, (_, i) => (
                    <svg class={`w-5 h-5 ${i < review.rating ? 'text-yellow-400' : 'text-gray-300'}`} fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                    </svg>
                  ))}
                </div>
                <div class="flex items-center gap-1 bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium">
                  <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                  </svg>
                  <span>Verified</span>
                </div>
              </div>
              <div class="flex-grow">
                <p class="text-gray-700 leading-relaxed">
                  "<span class={`review-text-${index}`}>{previewText}</span>"
                </p>
                {isLongText && (
                  <button 
                    class={`read-more-btn-${index} text-blue-600 hover:text-blue-800 text-sm font-medium mt-2 transition-colors`}
                    onclick={`toggleReview(${index}, "${reviewText.replace(/"/g, '\\"')}", "${previewText.replace(/"/g, '\\"')}")`}
                  >
                    Read more
                  </button>
                )}
              </div>
              <div class="border-t pt-4 mt-auto">
                <p class="font-semibold text-gray-900">{review.name}</p>
                <p class="text-sm text-gray-600">{review.location}</p>
                {showPlatform && (
                  <p class="text-xs text-gray-500 mt-1">{review.platform} Review</p>
                )}
              </div>
            </div>
          </Card>
        )
      })}
    </div>
  </div>
</section>

<script>
  function toggleReview(index, fullText, previewText) {
    const textElement = document.querySelector(`.review-text-${index}`);
    const buttonElement = document.querySelector(`.read-more-btn-${index}`);
    
    if (textElement && buttonElement) {
      if (buttonElement.textContent === 'Read more') {
        textElement.textContent = fullText;
        buttonElement.textContent = 'Read less';
      } else {
        textElement.textContent = previewText;
        buttonElement.textContent = 'Read more';
      }
    }
  }
  
  // Make function globally available
  window.toggleReview = toggleReview;
</script>