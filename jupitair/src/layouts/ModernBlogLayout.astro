---
import BaseLayout from './BaseLayout.astro';
import { Image } from 'astro:assets';

export interface Props {
  frontmatter: {
    title: string;
    description: string;
    author: string;
    publishDate: Date;
    updateDate?: Date;
    heroImage?: string;
    heroImageAlt?: string;
    category: string;
    subcategory?: string;
    tags: string[];
    featured: boolean;
    metaTitle?: string;
    metaDescription?: string;
    primaryKeyword: string;
    secondaryKeywords: string[];
    canonicalURL?: string;
    readingTime?: number;
    tableOfContents?: boolean;
    schemaTypes?: string[];
    ctaText?: string;
    ctaLink?: string;
    relatedPosts?: string[];
    internalLinks?: string[];
  };
}

const { frontmatter } = Astro.props;

// Format dates
const formattedPublishDate = new Date(frontmatter.publishDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

const formattedUpdateDate = frontmatter.updateDate ? new Date(frontmatter.updateDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}) : null;

// Schema data
const blogSchema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": frontmatter.title,
  "description": frontmatter.description,
  "author": {
    "@type": "Organization",
    "name": frontmatter.author,
    "url": "https://jupitairhvac.com"
  },
  "datePublished": frontmatter.publishDate,
  "dateModified": frontmatter.updateDate || frontmatter.publishDate,
  "image": frontmatter.heroImage ? `https://jupitairhvac.com${frontmatter.heroImage}` : undefined,
  "publisher": {
    "@type": "Organization",
    "name": "Jupitair HVAC",
    "logo": {
      "@type": "ImageObject",
      "url": "https://jupitairhvac.com/logo.png"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": frontmatter.canonicalURL || `https://jupitairhvac.com/blog/${frontmatter.title.toLowerCase().replace(/\s+/g, '-')}`
  },
  "keywords": [frontmatter.primaryKeyword, ...frontmatter.secondaryKeywords].join(', ')
};
---

<BaseLayout 
  title={frontmatter.metaTitle || `${frontmatter.title} | Jupitair HVAC`}
  description={frontmatter.metaDescription || frontmatter.description}
  keywords={[frontmatter.primaryKeyword, ...frontmatter.secondaryKeywords].join(', ')}
  canonical={frontmatter.canonicalURL}
>
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(blogSchema)} />
  
  <!-- Custom styles for modern blog design -->
  <style>
    /* Reading progress indicator */
    .reading-progress {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background: linear-gradient(90deg, #3b82f6 0%, #06b6d4 100%);
      transform-origin: left;
      transform: scaleX(0);
      transition: transform 0.1s ease-out;
      z-index: 1000;
    }
    
    /* Hero parallax effect */
    .hero-parallax {
      transform: translateY(0);
      will-change: transform;
    }
    
    /* Glassmorphism cards */
    .glass-card {
      background: rgba(255, 255, 255, 0.85);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    @supports not (backdrop-filter: blur(10px)) {
      .glass-card {
        background: rgba(255, 255, 255, 0.95);
      }
    }
    
    /* Content animations */
    .fade-in {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.6s ease-out forwards;
    }
    
    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .stagger-1 { animation-delay: 0.1s; }
    .stagger-2 { animation-delay: 0.2s; }
    .stagger-3 { animation-delay: 0.3s; }
    
    /* Enhanced prose styles */
    .modern-prose {
      font-size: 1.125rem;
      line-height: 1.8;
      color: #1a1a1a;
    }
    
    .modern-prose h2 {
      position: relative;
      padding-left: 1.5rem;
      margin: 3rem 0 1.5rem;
    }
    
    .modern-prose h2::before {
      content: '';
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      width: 4px;
      height: 100%;
      background: linear-gradient(180deg, #3b82f6, #06b6d4);
      border-radius: 2px;
    }
    
    /* Visual break elements */
    .visual-break {
      margin: 3rem 0;
      text-align: center;
    }
    
    .visual-break::before {
      content: 'â€¢ â€¢ â€¢';
      font-size: 1.5rem;
      letter-spacing: 1rem;
      color: #cbd5e1;
    }
    
    /* Interactive elements hover */
    .interactive-card {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .interactive-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    /* Mobile-first responsive design */
    @media (max-width: 640px) {
      .modern-prose {
        font-size: 1rem;
        line-height: 1.7;
      }
      
      .modern-prose p {
        margin-bottom: 1.25rem;
      }
    }
    
    /* Tablet optimizations */
    @media (min-width: 641px) and (max-width: 1024px) {
      .modern-prose {
        font-size: 1.0625rem;
      }
    }
    
    /* Desktop enhancements */
    @media (min-width: 1025px) {
      .modern-prose {
        font-size: 1.1875rem;
        line-height: 1.85;
      }
      
      .pull-quote {
        width: 130%;
        margin-left: -15%;
        margin-right: -15%;
      }
    }
  </style>
  
  <!-- Reading progress bar -->
  <div class="reading-progress" id="progress-bar"></div>
  
  <!-- Announcement Banner for Visual Design -->
  <div class="bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 text-center relative overflow-hidden">
    <div class="absolute inset-0 bg-black/20"></div>
    <div class="relative z-10">
      <span class="font-bold text-lg">ðŸŽ¨ NEW VISUAL DESIGN</span>
      <span class="ml-2">Experience our modern, interactive blog layout with enhanced visuals</span>
    </div>
  </div>
  
  <!-- Hero Section with Parallax -->
  <section class="relative min-h-[70vh] md:min-h-[80vh] flex items-end hero-parallax overflow-hidden" id="hero" style="margin-top: -80px; padding-top: 80px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
    {frontmatter.heroImage ? (
      <div class="absolute inset-0 z-0">
        <img 
          src={frontmatter.heroImage}
          alt={frontmatter.heroImageAlt || frontmatter.title}
          class="w-full h-full object-cover opacity-30 mix-blend-overlay"
          loading="eager"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-purple-900/20 to-transparent"></div>
      </div>
    ) : (
      <div class="absolute inset-0 z-0">
        <div class="absolute inset-0 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 opacity-90"></div>
        <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.05"%3E%3Cpath d="M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E'); background-size: 60px 60px;"></div>
      </div>
    )}
    
    <div class="relative z-10 w-full px-4 sm:px-6 lg:px-8 pb-12 md:pb-16">
      <div class="max-w-7xl mx-auto">
        <!-- Category badge -->
        <div class="mb-4 fade-in">
          <span class="inline-flex items-center px-4 py-1.5 rounded-full text-sm font-semibold bg-blue-500/90 text-white backdrop-blur-sm">
            {frontmatter.category}
          </span>
          {frontmatter.featured && (
            <span class="ml-2 inline-flex items-center px-3 py-1.5 rounded-full text-sm font-semibold bg-amber-500/90 text-white backdrop-blur-sm">
              Featured
            </span>
          )}
        </div>
        
        <!-- Title -->
        <h1 class="text-4xl md:text-5xl lg:text-7xl font-black text-white mb-6 fade-in stagger-1 drop-shadow-2xl" style="text-shadow: 0 4px 20px rgba(0,0,0,0.5);">
          {frontmatter.title}
        </h1>
        
        <!-- Description -->
        <p class="text-xl md:text-2xl text-gray-100 max-w-4xl mb-8 fade-in stagger-2 drop-shadow">
          {frontmatter.description}
        </p>
        
        <!-- Meta info -->
        <div class="flex flex-wrap items-center gap-6 text-gray-200 fade-in stagger-3">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"/>
            </svg>
            <span>{frontmatter.author}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
            </svg>
            <time datetime={frontmatter.publishDate.toISOString()}>
              {formattedPublishDate}
            </time>
          </div>
          {frontmatter.readingTime && (
            <div class="flex items-center gap-2">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
              </svg>
              <span>{frontmatter.readingTime} min read</span>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>
  
  <!-- Main Article Container with Floating Card Design -->
  <article class="relative -mt-20 z-20">
    <!-- Decorative Background -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute -top-96 left-1/2 transform -translate-x-1/2 w-[1000px] h-[1000px] bg-gradient-to-br from-blue-400/20 via-purple-400/20 to-pink-400/20 rounded-full blur-3xl"></div>
    </div>
    
    <div class="relative px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        
        <!-- Floating Content Card -->
        <div class="bg-white rounded-3xl shadow-2xl p-8 md:p-12 mb-12" style="box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);">
          <!-- Two-column layout for content and sidebar -->
          <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-12">
            <!-- Main content area -->
            <div class="lg:col-span-8">
            <!-- Table of Contents (Mobile) -->
            {frontmatter.tableOfContents && (
              <div class="lg:hidden mb-8">
                <details class="glass-card rounded-xl p-6 group">
                  <summary class="cursor-pointer list-none flex items-center justify-between text-lg font-bold text-gray-900">
                    <span class="flex items-center gap-3">
                      <svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"/>
                      </svg>
                      Table of Contents
                    </span>
                    <svg class="w-5 h-5 transition-transform group-open:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                    </svg>
                  </summary>
                  <div id="toc-mobile" class="mt-4 pt-4 border-t border-gray-200">
                    <!-- TOC will be generated by script -->
                  </div>
                </details>
              </div>
            )}
            
            <!-- Article content -->
            <div class="modern-prose">
              <slot />
            </div>
            
            
            <!-- Tags -->
            {frontmatter.tags && frontmatter.tags.length > 0 && (
              <div class="mt-12">
                <h3 class="text-lg font-bold text-gray-900 mb-4">Related Topics</h3>
                <div class="flex flex-wrap gap-2">
                  {frontmatter.tags.map(tag => (
                    <span class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-full text-sm font-medium text-gray-700 transition-colors cursor-pointer">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>
          
          <!-- Sidebar -->
          <aside class="lg:col-span-4">
            <div class="sticky top-24 space-y-6">
              <!-- Table of Contents (Desktop) -->
              {frontmatter.tableOfContents && (
                <div class="hidden lg:block glass-card rounded-xl p-6">
                  <h3 class="flex items-center gap-3 text-lg font-bold text-gray-900 mb-4">
                    <svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"/>
                    </svg>
                    On This Page
                  </h3>
                  <nav id="toc-desktop" class="space-y-2">
                    <!-- TOC will be generated by script -->
                  </nav>
                </div>
              )}
              
              
              <!-- CTA Card -->
              <div class="bg-gradient-to-br from-blue-600 to-cyan-600 rounded-xl p-6 text-white shadow-xl">
                <h3 class="text-xl font-bold mb-3">Need Professional Help?</h3>
                <p class="mb-6 text-blue-50">
                  Get fast, reliable HVAC service from North Texas's trusted experts.
                </p>
                <div class="space-y-3">
                  <a href="tel:469-518-2211" class="block w-full bg-white text-blue-600 font-bold py-3 px-4 rounded-lg text-center hover:bg-blue-50 transition-colors">
                    Call (469) 518-2211
                  </a>
                  <a href={frontmatter.ctaLink || '/schedule'} class="block w-full bg-blue-700 text-white font-semibold py-3 px-4 rounded-lg text-center hover:bg-blue-800 transition-colors">
                    {frontmatter.ctaText || 'Schedule Online'}
                  </a>
                </div>
                <p class="text-xs text-blue-100 mt-4 text-center">
                  24/7 Emergency Service Available
                </p>
              </div>
              
              <!-- Related Articles -->
              {frontmatter.relatedPosts && frontmatter.relatedPosts.length > 0 && (
                <div class="glass-card rounded-xl p-6">
                  <h3 class="text-lg font-bold text-gray-900 mb-4">Related Articles</h3>
                  <ul class="space-y-3">
                    {frontmatter.relatedPosts.slice(0, 4).map(post => (
                      <li>
                        <a href={`/blog/${post}`} class="group flex items-start gap-2 text-gray-700 hover:text-blue-600 transition-colors">
                          <svg class="w-4 h-4 mt-1 flex-shrink-0 text-gray-400 group-hover:text-blue-600 transition-colors" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"/>
                          </svg>
                          <span class="text-sm font-medium">
                            {post.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}
                          </span>
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </aside>
        </div>
        </div>
      </div>
    </div>
  </article>
  
  <!-- Generate TOC and initialize interactions -->
  <script>
    // Reading progress bar
    function updateProgressBar() {
      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
      const scrolled = (winScroll / height);
      document.getElementById('progress-bar').style.transform = `scaleX(${scrolled})`;
    }
    
    // Parallax effect
    function updateParallax() {
      const scrolled = window.pageYOffset;
      const hero = document.getElementById('hero');
      if (hero) {
        hero.style.transform = `translateY(${scrolled * 0.5}px)`;
      }
    }
    
    // Generate table of contents
    function generateTOC() {
      const tocContainers = [document.getElementById('toc-desktop'), document.getElementById('toc-mobile')];
      const headings = document.querySelectorAll('.modern-prose h2, .modern-prose h3');
      
      tocContainers.forEach(container => {
        if (container && headings.length > 0) {
          const tocList = document.createElement('ul');
          tocList.className = 'space-y-2';
          
          let currentSection = null;
          
          headings.forEach((heading, index) => {
            const id = heading.id || `heading-${index}`;
            heading.id = id;
            
            const li = document.createElement('li');
            
            if (heading.tagName === 'H2') {
              currentSection = li;
              li.className = 'font-medium';
            } else if (heading.tagName === 'H3') {
              li.className = 'ml-4 text-sm';
            }
            
            const link = document.createElement('a');
            link.href = `#${id}`;
            link.textContent = heading.textContent;
            link.className = 'text-gray-600 hover:text-blue-600 transition-colors block py-1';
            
            // Smooth scroll
            link.addEventListener('click', (e) => {
              e.preventDefault();
              document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
            });
            
            li.appendChild(link);
            tocList.appendChild(li);
          });
          
          container.appendChild(tocList);
        }
      });
    }
    
    // Intersection Observer for fade-in animations
    function setupIntersectionObserver() {
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);
      
      // Observe all content sections
      document.querySelectorAll('.modern-prose > *').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        el.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';
        observer.observe(el);
      });
    }
    
    // Initialize everything
    document.addEventListener('DOMContentLoaded', () => {
      generateTOC();
      setupIntersectionObserver();
      
      // Update progress and parallax on scroll
      window.addEventListener('scroll', () => {
        updateProgressBar();
        updateParallax();
      });
    });
  </script>
</BaseLayout>