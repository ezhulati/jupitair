---
export interface Props {
  variant?: 'default' | 'service' | 'elevated' | 'bordered';
  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  class?: string;
  [key: string]: any;
}

const {
  variant = 'default',
  padding = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = 'bg-white rounded-xl transition-all duration-200 overflow-hidden';

const variantClasses = {
  default: 'shadow-sm hover:shadow-md border border-gray-200',
  service: 'shadow-md hover:shadow-lg border border-gray-100 hover:border-primary-200 transform hover:-translate-y-1',
  elevated: 'shadow-lg hover:shadow-xl border border-gray-100',
  bordered: 'border-2 border-gray-200 hover:border-primary-400 shadow-sm'
};

const paddingClasses = {
  none: '',
  sm: 'p-4 sm:p-5',
  md: 'p-5 sm:p-6 lg:p-8',
  lg: 'p-6 sm:p-8 lg:p-10',
  xl: 'p-8 sm:p-10 lg:p-12'
};

const classes = `${baseClasses} ${variantClasses[variant]} ${paddingClasses[padding]} ${className}`.trim();
---

<div class={classes} {...rest}>
  <slot />
</div>